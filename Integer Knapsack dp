#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int maxx(int a, int b, int c){
    return max(max(a,b) , max(b,c));
}

int knapsack(int W, vector<int> v, int n){
    int dp[n+1][W+1];
    for(int i=0; i<=n; ++i){
        for(int j=0; j<=W; ++j){
            if(i==0 || j==0)
                dp[i][j] = 0;
            else if(v[i-1]>j)
                dp[i][j] = dp[i-1][j];
            else
                dp[i][j] = maxx(v[i-1] + dp[i][j-v[i-1]], dp[i-1][j], v[i-1] + dp[i-1][j-v[i-1]]);
        }
    }
    return dp[n][W];
}

int main() {
    int t;
    cin>>t;
    for(int i=0; i<t; ++i){
        int n,k;
        cin>>n>>k;
        vector<int> v;
        for(int j=0; j<n; ++j){
            int x;
            cin>>x;
            v.push_back(x);
        }
        cout<<knapsack(k,v,n)<<endl;
    }
    return 0;
}

